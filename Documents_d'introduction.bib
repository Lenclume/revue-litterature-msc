
@misc{noauthor_p4_2020,
	title = {P4 {Network} {Programming} {Language}—what is it all about?},
	url = {https://codilime.com/blog/p4-network-programming-language-what-is-it-all-about/},
	abstract = {P4 is a programming language that can be used to program network devices. Read on to learn more on its history, architecture and use cases.},
	language = {en-us},
	urldate = {2023-01-18},
	journal = {CodiLime},
	month = apr,
	year = {2020},
	keywords = {Lu},
	file = {Snapshot:C\:\\Users\\Yann\\Zotero\\storage\\4JMF8XCM\\p4-network-programming-language-what-is-it-all-about.html:text/html},
}

@misc{noauthor_what_nodate,
	title = {What you should know about {P4} programming language\& {P4} programmable switch},
	url = {https://cloudswit.ch/blogs/what-you-should-know-about-p4-programming-language-p4-switch/},
	abstract = {This article is an explanation of what is P4 programming language\& P4 switch. Further introduces Asterfusion Tofino based 3.3T-6.5T P4 programmable switch solutions},
	language = {en-US},
	urldate = {2023-01-18},
	journal = {Open Source Software Defined Network},
	keywords = {Lu},
	file = {Snapshot:C\:\\Users\\Yann\\Zotero\\storage\\KL9P32VV\\what-you-should-know-about-p4-programming-language-p4-switch.html:text/html},
}

@misc{rijsman_getting_2019,
	title = {Getting {Started} with {P4}},
	url = {https://opennetworking.org/news-and-events/blog/getting-started-with-p4/},
	abstract = {Editor Note: This post was originally written by Bruno Rijsman for his personal blog. We are re-publishing it here (with permission) as it provides an excellent introduction to getting started with the P4 language using the software tools that have been developed by the open-source community. Introduction I recently got serious about learning P4, a […]},
	language = {en-US},
	urldate = {2023-01-18},
	journal = {Open Networking Foundation},
	author = {Rijsman, Bruno},
	month = oct,
	year = {2019},
	keywords = {Lu, Tutoriel},
	file = {Snapshot:C\:\\Users\\Yann\\Zotero\\storage\\KE2ZQHAN\\getting-started-with-p4.html:text/html},
}

@article{bosshart_p4_2014,
	title = {P4: programming protocol-independent packet processors},
	volume = {44},
	issn = {0146-4833},
	shorttitle = {P4},
	url = {https://dl.acm.org/doi/10.1145/2656877.2656890},
	doi = {10.1145/2656877.2656890},
	abstract = {P4 is a high-level language for programming protocol-independent packet processors. P4 works in conjunction with SDN control protocols like OpenFlow. In its current form, OpenFlow explicitly speciﬁes protocol headers on which it operates. This set has grown from 12 to 41 ﬁelds in a few years, increasing the complexity of the speciﬁcation while still not providing the ﬂexibility to add new headers. In this paper we propose P4 as a strawman proposal for how OpenFlow should evolve in the future. We have three goals: (1) Reconﬁgurability in the ﬁeld: Programmers should be able to change the way switches process packets once they are deployed. (2) Protocol independence: Switches should not be tied to any speciﬁc network protocols. (3) Target independence: Programmers should be able to describe packetprocessing functionality independently of the speciﬁcs of the underlying hardware. As an example, we describe how to use P4 to conﬁgure a switch to add a new hierarchical label.},
	language = {en},
	number = {3},
	urldate = {2023-01-24},
	journal = {ACM SIGCOMM Computer Communication Review},
	author = {Bosshart, Pat and Daly, Dan and Gibb, Glen and Izzard, Martin and McKeown, Nick and Rexford, Jennifer and Schlesinger, Cole and Talayco, Dan and Vahdat, Amin and Varghese, George and Walker, David},
	month = jul,
	year = {2014},
	keywords = {Lu},
	pages = {87--95},
	file = {Bosshart et al. - 2014 - P4 programming protocol-independent packet proces.pdf:C\:\\Users\\Yann\\Zotero\\storage\\K7B89BDF\\Bosshart et al. - 2014 - P4 programming protocol-independent packet proces.pdf:application/pdf},
}

@article{kfoury_exhaustive_2021,
	title = {An {Exhaustive} {Survey} on {P4} {Programmable} {Data} {Plane} {Switches}: {Taxonomy}, {Applications}, {Challenges}, and {Future} {Trends}},
	volume = {9},
	issn = {2169-3536},
	shorttitle = {An {Exhaustive} {Survey} on {P4} {Programmable} {Data} {Plane} {Switches}},
	url = {https://ieeexplore.ieee.org/document/9447791/},
	doi = {10.1109/ACCESS.2021.3086704},
	abstract = {Traditionally, the data plane has been designed with fixed functions to forward packets using a small set of protocols. This closed-design paradigm has limited the capability of the switches to proprietary implementations which are hard-coded by vendors, inducing a lengthy, costly, and inflexible process. Recently, data plane programmability has attracted significant attention from both the research community and the industry, permitting operators and programmers in general to run customized packet processing functions. This open-design paradigm is paving the way for an unprecedented wave of innovation and experimentation by reducing the time of designing, testing, and adopting new protocols; enabling a customized, top-down approach to develop network applications; providing granular visibility of packet events defined by the programmer; reducing complexity and enhancing resource utilization of the programmable switches; and drastically improving the performance of applications that are offloaded to the data plane. Despite the impressive advantages of programmable data plane switches and their importance in modern networks, the literature has been missing a comprehensive survey. To this end, this paper provides a background encompassing an overview of the evolution of networks from legacy to programmable, describing the essentials of programmable switches, and summarizing their advantages over Softwaredefined Networking (SDN) and legacy devices. The paper then presents a unique, comprehensive taxonomy of applications developed with P4 language; surveying, classifying, and analyzing more than 200 articles; discussing challenges and considerations; and presenting future perspectives and open research issues.},
	language = {en},
	urldate = {2023-01-24},
	journal = {IEEE Access},
	author = {Kfoury, Elie F. and Crichigno, Jorge and Bou-Harb, Elias},
	year = {2021},
	keywords = {Lu, P4 language, Protocols, data plane, Control systems, custom packet processing, Market research, Programmable switches, Security, Software, Software-defined Networking, taxonomy, Taxonomy, Technological innovation},
	pages = {87094--87155},
	file = {IEEE Xplore Abstract Record:C\:\\Users\\Yann\\Zotero\\storage\\LTMSR9U7\\9447791.html:text/html;IEEE Xplore Full Text PDF:C\:\\Users\\Yann\\Zotero\\storage\\9WUKD6M5\\Kfoury et al. - 2021 - An Exhaustive Survey on P4 Programmable Data Plane.pdf:application/pdf;Kfoury et al. - 2021 - An Exhaustive Survey on P4 Programmable Data Plane.pdf:C\:\\Users\\Yann\\Zotero\\storage\\ID7RDCZC\\Kfoury et al. - 2021 - An Exhaustive Survey on P4 Programmable Data Plane.pdf:application/pdf},
}
